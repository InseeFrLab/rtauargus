% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hrc.R
\name{write_hrc}
\alias{write_hrc}
\title{Crée un fichier hrc à partir de microdonnées}
\usage{
write_hrc(microdata, vars_hrc,
  hierleadstring = getOption("rtauargus.hierleadstring"),
  hrc_filename = NULL, fill_na = c("up", "down"), compact = TRUE)
}
\arguments{
\item{microdata}{[\strong{obligatoire}] data.frame contenant les
microdonnées.}

\item{vars_hrc}{\strong{[obligatoire]} vecteur des noms des variables
constituant la hiérarchie, du niveau le plus fin au niveau le plus agrégé.}

\item{hierleadstring}{caractère qui, répété n fois, indique que la valeur est
à n niveaux de profondeur dans la hiérarchie.}

\item{hrc_filename}{nom et emplacement du fichier hrc produit. Si non
renseigné, un fichier temporaire.}

\item{fill_na}{remplissage d'éventuelles valeurs manquantes, à l'aide d'une
autre variable :\itemize{
  \item{\code{"up"} (défaut) : variable hiérarchique de niveau
     immédiatement supérieur}
  \item{\code{"down"} : variable hiérarchique de niveau immédiatement
     inférieur}
 }}

\item{compact}{pour élaguer les branches répétant une unique valeur jusqu'au
plus bas niveau de profondeur (\code{TRUE} par défaut).}
}
\value{
Le nom du fichier hrc (utile dans le cas d'un fichier temporaire au
  nom aléatoire).
}
\description{
Crée un fichier hrc (hiérarachie) à partir de plusieurs variables d'un jeu de
microdonnées.
}
\details{
La fonction reconstitue la hiérarchie des variables à partir des niveaux
présents dans les données. Les variables dans \code{vars_hrc} doivent être
\strong{classées de la plus fine à la plus agrégée}.

La relation entre chaque niveau hiérarchique doit être une application (au
sens mathématique du terme), c'est-à-dire que chaque niveau fin doit avoir un
seul et unique niveau agrégé correspondant. La création de la hiérarchie est
impossible si cette condition n'est pas remplie.

Si le nom du fichier en sortie n'est pas spécifié, un fichier temporaire est
créé. Il sera effacé en fin de session. Le chemin vers ce fichier peut être
récupéré dans la valeur de retour de la fonction.

Les valeurs manquantes présentes dans les variables hiérarchiques seront
préalablement imputées à l'aide d'une autre variable hiérarchique (paramètre
\code{fill_na}). En stratégie ascendante (\code{"up"}), les variables sont
parcourues de la plus agrégée à la plus fine, et inversement en stratégie
descendante (\code{"down"}).

Le paramètre \code{compact} permet de créer des hiérarchies à profondeurs
variables. L'idée est de couper les branches constituées d'une seule valeur
répétée jusqu'à la profondeur maximale (voir exemples).
}
\examples{
# Hierarchie "complete" ............................

df_naf <- data.frame(
  A10 = c("AZ", "BE", "BE", "BE", "BE", "BE", "BE"),
  A21 = c("A" , "C" , "B" , "C" , "C" , "C" , "B" ),
  A88 = c("01", "10", "06", "10", "12", "11", "07")
)

tmp_file <- write_hrc(df_naf, c("A88", "A21", "A10"))
file.show(tmp_file, pager = "console")

tmp_file <- write_hrc(df_naf, c("A88", "A10"), hierleadstring = ":")
file.show(tmp_file, pager = "console")

# Hierarchie de profondeur variable  ...............

df <- data.frame(
  niv1 = c("A"  , "A"  , "A"  , "B"  , "C"  , "C" ),
  niv2 = c("A1" , "A1" , "A2" ,  NA  , "C1" , "C2"),
  niv3 = c("A1x", "A1y",  NA  ,  NA  , "C1" ,  NA )
)

tmp_file <- write_hrc(df, c("niv3", "niv2", "niv1"))
file.show(tmp_file, pager = "console")

tmp_file <- write_hrc(df, c("niv3", "niv2", "niv1"), compact = FALSE)
file.show(tmp_file, pager = "console")

}
